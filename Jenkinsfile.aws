pipeline {
    agent any

    environment {
       CHECKOV_API_KEY = credentials('checkov-api-key')
    }

    stages {
        stage('Execute Scans') {
            stages {
                stage ('Execute CLOC scan'){
                    steps {
                        echo 'Executing CLOC'
                        script {
                            docker.image('aldanial/cloc:latest').inside("--entrypoint=''") {
                                sh 'aldanial/cloc ./php'
                            }
                        }
                    }
                }
                stage ('Execute Checkov Scan'){
                    steps {
                        echo 'Executing Checkov Scan'
                        script {
                            docker.image('bridgecrew/checkov:latest').inside("--entrypoint=''") {
                                try {
                                    sh 'checkov -d . --bc-api-key $CHECKOV_API_KEY --skip-framework sca_image --skip-check CKV_DOCKER*,CKV_SECRET_6 --use-enforcement-rules -o cli -o junitxml --output-file-path console,results.xml'
                                    junit skipPublishingChecks: true, testResults: 'results.xml'
                                } catch (err) {
                                    junit skipPublishingChecks: true, testResults: 'results.xml'
                                    throw err
                                }
                            }
                        }
                    }
                }
                stage ('Execute PHPMetrics Scan'){
                    steps {
                        echo 'Executing PHPMetrics'
                        script {
                            docker.image('herloct/phpmetrics:latest').inside("--entrypoint=''") {
                                sh 'phpmetrics --report-html=bsidesorlandoreport ./php'
                            }
                        }
                    }
                }
                stage ('Executing Tartufo Scan'){
                    steps {
                        echo 'Executing Tartufo'
                        script {
                            docker.image('godaddy/tartufo:latest').inside("--entrypoint=''") {
                                sh 'tartufo scan-local-repo .'
                            }
                        }
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying PHP App'
            }
        }
    }
}
